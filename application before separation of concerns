import React, { Fragment, useState, useEffect } from "react";
import "components/Application.scss";
import DayListItem from "components/DayListItem";
import DayList from "components/DayList";
import Appointment from "components/Appointment";
import InterviewListItem from "./InterviewerListItem";
import axios from 'axios';
import {getAppointmentsForDay, getInterview, getInterviewersForDay} from "helpers/selectors"


export default function Application(props) {

  // refactoring to combine states
  const [state, setState] = useState({
    day: "Monday",
    days: [],
    appointments: {},
    interviewers: {}
  });

  //creating a setDay function that updates the state with the new day.
  const setDay = day => setState(prev => ({ ...prev, day }));

  // const [results, setResults] = useState([]);
  // const [loading, setLoading] = useState(true);
  // const [error, setError] = useState("");

  useEffect(() => {
    const URL1 = "http://localhost:8001/api/days"
    const URL2 = "http://localhost:8001/api/appointments"
    const URL3 = "http://localhost:8001/api/interviewers"
    const daysRequest = axios.get(URL1);
    const appointmentsRequest = axios.get(URL2);
    const interviewersRequest = axios.get(URL3);


    Promise
      .all([daysRequest, appointmentsRequest, interviewersRequest])
      .then(function(resp) {
        setState(prev => (
          {
            ...prev,
            days: resp[0].data,
            appointments: resp[1].data,
            interviewers: resp[2].data
          }
        ))
      });
   
  }, []);


  //using the getInterviewByDay selector
  const interviewers = getInterviewersForDay(state, state.day)

  //bookInterview function
  function bookInterview(id, interview) {
    console.log(id, interview);
    const appointment = {
      ...state.appointments[id],
      interview: { ...interview }
    };
    const appointments = {
      ...state.appointments,
      [id]: appointment
    };
    //making a put request with axios to update the database with the appointment data.
    return (
    axios.put(`http://localhost:8001/api/appointments/${id}`, {id,interview} )
      .then(() => {
        setState({
          ...state,
          appointments
        });    
      })
    )  
  };

  //the cancelInterview function
  function cancelInterview(id) {
    console.log('The cancelInterview fcn has beel called. The appointment ID is: ', id);
    const appointment = {
      ...state.appointments[id],
      interview: null
    };
    const appointments = {
      ...state.appointments,
      [id]: appointment
    };
    
    return(
      axios.delete(`http://localhost:8001/api/appointments/${id}`)
        .then(() => {
          setState({
          ...state,
          appointments
          })
        })
    )
  }

  const schedule = Object.values(state.appointments).map((appointment) => {
    const interview = getInterview(state, appointment.interview);
    return (
      <Appointment
        key={appointment.id}
        id={appointment.id}
        time={appointment.time}
        interview={interview}
        interviewers={interviewers}
        bookInterview={bookInterview}
        cancelInterview={cancelInterview}
      />
    );
  });

  return (
    <main className="layout">
      <section className="sidebar">
      <img
        className="sidebar--centered"
        src="images/logo.png"
        alt="Interview Scheduler"
      />
      <hr className="sidebar__separator sidebar--centered" />
      <nav className="sidebar__menu">
        <DayList
          days={state.days}
          day={state.day}
          setDay={state.setDay}
        />
      </nav>
      <img
        className="sidebar__lhl sidebar--centered"
        src="images/lhl.png"
        alt="Lighthouse Labs"
      />
      </section>
      <section className="schedule">
        {schedule}
      </section>
    </main>
  );
}



